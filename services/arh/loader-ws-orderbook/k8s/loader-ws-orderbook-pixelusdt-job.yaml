apiVersion: batch/v1
kind: Job
metadata:
  name: loader-ws-orderbook-pixelusdt-job
  namespace: stf
  labels:
    app: loader-ws-orderbook
    queue-id: loader-ws-pixelusdt-orderbook
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app: loader-ws-orderbook
    spec:
      restartPolicy: Never
      containers:
        - name: loader
          image: registry.dmz.home/kinga/stream-forge/loader-ws-orderbook:0.1.0
          imagePullPolicy: Always
          env:
            - name: QUEUE_ID
              value: "loader-ws-pixelusdt-orderbook"
            - name: SYMBOL
              value: "PIXELUSDT"
            - name: TYPE
              value: "ws_orderbook"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "k3-kafka-bootstrap.kafka:9093"
            - name: KAFKA_TOPIC
              value: "pixelusdt-orderbook"
            - name: KAFKA_USER_PRODUCER
              valueFrom:
                secretKeyRef:
                  name: stf-shared-secret
                  key: KAFKA_USER
            - name: KAFKA_PASSWORD_PRODUCER
              valueFrom:
                secretKeyRef:
                  name: stf-shared-secret
                  key: KAFKA_PASSWORD
            - name: KAFKA_USER_CONSUMER
              valueFrom:
                secretKeyRef:
                  name: stf-shared-secret
                  key: KAFKA_USER
            - name: KAFKA_PASSWORD_CONSUMER
              valueFrom:
                secretKeyRef:
                  name: stf-shared-secret
                  key: KAFKA_PASSWORD
            - name: CA_PATH
              value: "/usr/local/share/ca-certificates/ca.crt"
            - name: CONTROL_TOPIC
              value: "queue-control"
            - name: TELEMETRY_TOPIC
              value: "queue-events"
            - name: TELEMETRY_INTERVAL
              value: "10"
          volumeMounts:
            - name: kafka-ca-volume
              mountPath: /usr/local/share/ca-certificates/ca.crt
              subPath: dev-ca.crt
              readOnly: true
      volumes:
        - name: kafka-ca-volume
          configMap:
            name: dev-ca-certificates
      serviceAccountName: full-access-sa
      nodeSelector:
        streamforge-node: "true"
